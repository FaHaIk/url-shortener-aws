{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","visibility","setVisibility","isDatepickerDisabled","setIsDatepickerDisabled","callAPI","firstName","lastName","myHeaders","Headers","append","raw","JSON","stringify","fetch","method","headers","body","redirect","then","response","text","result","alert","parse","catch","error","console","log","className","onPressEnter","e","size","placeholder","prefix","SearchOutlined","style","alignSelf","Group","onChange","target","value","defaultChecked","checked","disabled","disabledDate","current","valueOf","Date","now","bordered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA0EeA,MApEf,WACE,MAAoCC,IAAMC,SAAS,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwDH,IAAMC,UAAS,GAAvE,mBAAOG,EAAP,KAA6BC,EAA7B,KAeMC,EAAU,SAACC,EAAWC,GAE1B,IAAIC,EAAY,IAAIC,QAEpBD,EAAUE,OAAO,eAAgB,oBAEjC,IAAIC,EAAMC,KAAKC,UAAU,CAAE,UAAaP,EAAW,SAAYC,IAS/DO,MAAM,gEAPe,CACnBC,OAAQ,OACRC,QAASR,EACTS,KAAMN,EACNO,SAAU,WAITC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIC,MAAMX,KAAKY,MAAMF,GAAQL,SACxCQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,OAGzC,OACE,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAOC,aA5BC,SAAAC,GACZ1B,EAAQ,QAAS,WA2Be2B,KAAK,QAAQC,YAAY,iCAAiCC,OAAQ,cAACC,EAAA,EAAD,MAC9F,qBAAKN,UAAU,WACf,sBAAKA,UAAU,mBAAf,UACE,qBAAKO,MAAO,CAAEC,UAAW,UAAzB,SACE,eAAC,IAAMC,MAAP,CAAaC,SAzCI,SAAAR,GACzBJ,QAAQC,IAAI,gBAAiBG,EAAES,OAAOC,OACtCvC,EAAc6B,EAAES,OAAOC,QAuC4BA,MAAOxC,EAAlD,UACE,cAAC,IAAD,CAAOwC,MAAO,EAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,EAAd,0BAGJ,gCACE,cAAC,IAAD,CAAUC,gBAAc,EAACH,SA1CD,SAAAR,GAChC3B,EAAwB2B,EAAES,OAAOG,UAyCzB,0BACA,cAAC,IAAD,CACEC,SAAUzC,EACV8B,YAAY,kBACZY,aAAc,SAACC,GACb,OAAOA,EAAQC,UAAYC,KAAKC,OAElCC,UAAU,gBCpDTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.cfaa65c0.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nimport 'antd/dist/antd.css';\nimport { Input, Radio, DatePicker, Checkbox } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\nfunction App() {\n  const [visibility, setVisibility] = React.useState(1);\n  const [isDatepickerDisabled, setIsDatepickerDisabled] = React.useState(true);\n\n  const onChangeVisibility = e => {\n    console.log('radio checked', e.target.value);\n    setVisibility(e.target.value);\n  };\n\n  const onChangeHasExpirationDate = e => {\n    setIsDatepickerDisabled(e.target.checked)\n  }\n\n  const Enter = e => {\n    callAPI(\"Peter\", \"Zornig\")\n  }\n\n  const callAPI = (firstName, lastName) => {\n    // instantiate a headers object\n    var myHeaders = new Headers();\n    // add content type header to object\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    // using built in JSON utility package turn object to string and store in a variable\n    var raw = JSON.stringify({ \"firstName\": firstName, \"lastName\": lastName });\n    // create a JSON object with parameters for API call and store in a variable\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    // make API call with parameters and use promises to get response\n    fetch(\"https://aq7cww6x21.execute-api.eu-central-1.amazonaws.com/dev\", requestOptions)\n      .then(response => response.text())\n      .then(result => alert(JSON.parse(result).body))\n      .catch(error => console.log('error', error));\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"center-wrapper\">\n        <Input onPressEnter={Enter} size=\"large\" placeholder=\"Paste long URL and shorten it!\" prefix={<SearchOutlined />} />\n        <div className=\"spacer\"></div>\n        <div className=\"settings-wrapper\">\n          <div style={{ alignSelf: \"center\" }}>\n            <Radio.Group onChange={onChangeVisibility} value={visibility}>\n              <Radio value={1}>Public</Radio>\n              <Radio value={2}>Private</Radio>\n            </Radio.Group>\n          </div>\n          <div>\n            <Checkbox defaultChecked onChange={onChangeHasExpirationDate}>Never Expire</Checkbox>\n            <DatePicker\n              disabled={isDatepickerDisabled}\n              placeholder=\"Expiration date\"\n              disabledDate={(current) => {\n                return current.valueOf() < Date.now();\n              }}\n              bordered={false}\n            />\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}